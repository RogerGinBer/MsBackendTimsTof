% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MsBackendTimsTof-functions.R,
%   R/MsBackendTimsTof.R
\docType{class}
\name{MsBackendTimsTof}
\alias{MsBackendTimsTof}
\alias{MsBackendTimsTof-class}
\alias{backendInitialize,MsBackendTimsTof-method}
\alias{length,MsBackendTimsTof-method}
\alias{peaksData,MsBackendTimsTof-method}
\alias{mz,MsBackendTimsTof-method}
\alias{intensity,MsBackendTimsTof-method}
\alias{rtime,MsBackendTimsTof-method}
\alias{[,MsBackendTimsTof-method}
\alias{dataStorage,MsBackendTimsTof-method}
\title{TimsTOF data backend}
\usage{
MsBackendTimsTof()

\S4method{backendInitialize}{MsBackendTimsTof}(object, files, ..., BPPARAM = bpparam())

\S4method{length}{MsBackendTimsTof}(x)

\S4method{peaksData}{MsBackendTimsTof}(object)

\S4method{mz}{MsBackendTimsTof}(object)

\S4method{intensity}{MsBackendTimsTof}(object)

\S4method{rtime}{MsBackendTimsTof}(object)

\S4method{[}{MsBackendTimsTof}(x, i, j, ..., drop = FALSE)

\S4method{dataStorage}{MsBackendTimsTof}(object)
}
\arguments{
\item{object}{\code{MsBackendTimsTof} object.}

\item{files}{\code{character} specifying TimsTOF ’*.d’ folders names.}

\item{...}{Additional arguments.}

\item{BPPARAM}{Parameter object defining the parallel processing
setup to import data in parallel. Defaults to \code{BPPARAM = bpparam()}.
See \code{\link[=bpparam]{bpparam()}} for more information.}

\item{x}{\code{MsBackendTimsTof} object.}

\item{i}{For \code{[}: \code{integer}, \code{logical} to subset the object.}

\item{j}{For \code{[}: not supported.}

\item{drop}{For \code{[}: not considered.}
}
\description{
The \code{MsBackendTimsTof} class supports Bruker TimsTOF data files. New objects
are created with the \code{MsBackendTimsTof} function.
}
\section{Available methods}{


The following methods are implemented:
\itemize{
\item \code{[}: subset the backend. Only subsetting by element (\emph{row}/\code{i}) is
allowed. First the \verb{@indices} slot of \code{object} is subsetted and then the
\code{frames} and \code{fileNames} slots are subsetted accordingly. Note that \code{[}
does not update the values of \code{frames} variables (such as \code{"MaxIntensity"},
\code{"SummedIntensities"}, \code{"NumScans"} and \code{"NumPeaks"}).
\item \code{backendInitialize}: initializes \code{object} (the \code{MsBackendTimsTof} object)
using TimsTOF data files whose path is specified by \code{files}. This method
is supposed to be called right after creating a \code{MsBackendTimsTof} object
with \code{MsBackendTimsTof} function.
\item \code{dataStorage}: gets a \code{character} of length equal to the number of spectra
in \code{object} with the names of the '*.d' folders where each spectrum is
stored.
\item \code{intensity}: gets the intensity values from the spectra in the backend.
Returns a \code{\link[=NumericList]{NumericList()}} of \code{numeric} vectors (intensity values for each
spectrum). The length of the list is equal to the number of
spectra in \code{object}.
\item \code{mz}: gets the mass-to-charge ratios (m/z) from the spectra in the backend.
Returns a \code{\link[=NumericList]{NumericList()}} of \code{numeric} vectors (m/z values for each
spectrum). The length of the list is equal to the number of spectra in
\code{object}.
\item \code{peaksData}: gets the peak matrices of the spectra in the backend.
Returns a \code{list} of \code{matrix} with columns \code{"mz"} and \code{"intensity"}.
The length of the \code{list} is equal to the number of spectra in \code{object}.
\item \code{rtime}: gets the retention times for each spectrum. Returns a \code{numeric}
vector (length equal to the number of spectra) with the retention time
for each spectrum.
}
}

\author{
Andrea Vicini, Johannes Rainer
}
